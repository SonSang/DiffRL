params:  
  diff_env:
    name: AckleyEnv64
    stochastic_env: False
    episode_length: 1
    MM_caching_frequency: 1

  algo:
    name: grad_a2c_continuous_alpha

  model:
    name: continuous_a2c_logstd

  network:
    name: actor_critic
    separate: False
    space:
      continuous:
        mu_activation: None
        sigma_activation: None

        mu_init:
          name: default
        sigma_init:
          name: const_initializer
          val: 0
        fixed_sigma: True
    mlp:
      units: [64, 64]
      activation: elu
      d2rl: False
      
      initializer:
        name: default
      regularizer:
        name: None

  load_checkpoint: False
  load_path: nn/df_ackley64.pth

  config:
    device: cpu
    name: df_ackley64
    env_name: dflex
    multi_gpu: False
    ppo: True
    mixed_precision: False
    normalize_input: True
    normalize_value: True
    reward_shaper:
      scale_value: 0.01
    normalize_advantage: True
    gamma: 0.99
    tau: 0.95
    learning_rate: 1e-4
    lr_schedule: constant
    lr_threshold: 0.015
    kl_threshold: 0.015
    score_to_win: 20000
    max_epochs: 2000
    save_best_after: 50
    save_frequency: 100
    grad_norm: 1.0
    entropy_coef: 0.0
    truncate_grads: True
    e_clip: 0.2
    steps_num: 1
    num_actors: 64
    minibatch_size: 64
    mini_epochs: 5
    critic_coef: 4
    clip_value: True
    seq_len: 4
    bounds_loss_coef: 0.0001

    defer_summaries_sec: 0.001
    summaries_interval_sec_min: 0.001
    summaries_interval_sec_max: 0.002

    # grad informed

    defer_summaries_sec: 0.001
    summaries_interval_sec_min: 0.001
    summaries_interval_sec_max: 0.002

    gi_params:
      
      num_step: 1
      # algorithm: 'shac-only' 
      # algorithm: 'ppo-only'
      # algorithm: 'static-alpha-only'
      # algorithm: 'dynamic-alpha-only'
      # algorithm: 'grad-ppo-shac'
      # algorithm: 'grad-ppo-alpha'
      algorithm: 'basic-lr'


      max_alpha: 1e-0
      desired_alpha: 1e-1
      update_factor: 1.1
      update_interval: 0.40
      dynamic_alpha_scheduler: dynamic4
      max_dist_rp_lr: 0.2
      max_est_hessian_det_std: 0.05
      stable_ppo: False

      # THESE ARE THE REAL NETWORKS WE ARE GOING TO USE;
      network:
        actor: GradActorStochasticMLP # ActorDeterministicMLP
        actor_mlp:
          units: [64, 64]
          activation: elu
        actor_logstd_init: 0.0
        fixed_sigma: False

        critic: CriticMLP
        critic_mlp:
          units: [64, 64]
          activation: elu

      lr_schedule: linear # [constant, linear]
      
      # LEARNING RATE FOR RP-GRADIENT BASED ACTOR UPDATE;
      actor_learning_rate_shac: 1e-3 # 4e-2
      
      actor_learning_rate_alpha: 1e-5
      actor_iterations_alpha: 128

      actor_learning_rate_basic: 1e-3

      # LEARNING RATE FOR CRITIC UPDATE;
      critic_learning_rate: 1e-3
      critic_iterations: 16
      critic_num_batch: 4
      target_critic_alpha: 0.2
      
      betas: [0.7, 0.95] # adam
      
    player:
      # render: True
      determenistic: True
      games_num: 12
      num_actors: 4
      print_stats: True
